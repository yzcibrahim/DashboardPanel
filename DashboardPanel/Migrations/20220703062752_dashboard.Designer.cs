// <auto-generated />
using System;
using DashboardPanel.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DashboardPanel.Migrations
{
    [DbContext(typeof(GrafikDbContext))]
    [Migration("20220703062752_dashboard")]
    partial class dashboard
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DashboardPanel.Entities.DashBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Isim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DashBoards");
                });

            modelBuilder.Entity("DashboardPanel.Entities.DashBoardWidget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DashId")
                        .HasColumnType("int");

                    b.Property<int>("GrafikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DashId");

                    b.HasIndex("GrafikId");

                    b.ToTable("DashBoardWidgets");
                });

            modelBuilder.Entity("DashboardPanel.Entities.Grafik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Isim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Grafiks");
                });

            modelBuilder.Entity("DashboardPanel.Entities.GrafikData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Anahtar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GrafikId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GrafikId");

                    b.ToTable("GrafikDatas");
                });

            modelBuilder.Entity("DashboardPanel.Entities.DashBoardWidget", b =>
                {
                    b.HasOne("DashboardPanel.Entities.DashBoard", "Dash")
                        .WithMany("DashBoardWidgets")
                        .HasForeignKey("DashId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DashboardPanel.Entities.Grafik", "Graf")
                        .WithMany()
                        .HasForeignKey("GrafikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dash");

                    b.Navigation("Graf");
                });

            modelBuilder.Entity("DashboardPanel.Entities.GrafikData", b =>
                {
                    b.HasOne("DashboardPanel.Entities.Grafik", "Grafik")
                        .WithMany("GrafikDatas")
                        .HasForeignKey("GrafikId");

                    b.Navigation("Grafik");
                });

            modelBuilder.Entity("DashboardPanel.Entities.DashBoard", b =>
                {
                    b.Navigation("DashBoardWidgets");
                });

            modelBuilder.Entity("DashboardPanel.Entities.Grafik", b =>
                {
                    b.Navigation("GrafikDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
